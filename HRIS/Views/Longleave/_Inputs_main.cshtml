@model APPBASE.Models.Longleave_DetailVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    @Html.HiddenFor(model => model.RES_RUID, new { id = "RES_RUID" })
    <div class="col-xs-12">
        @if (ViewData.ModelState["RES_NM0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="RES_NM">Nama Karyawan</label>

            <div class="input-group input-group-sm">
                <input type="text" id="RES_NM" name="RES_NM" value="@Html.DisplayFor(model => model.RES_NM)" class="form-control" readonly />
                <span class="input-group-btn">
                    <button type="button" id="cmdLookupRES_NM" name="cmdLookupRES_NM" class="btn btn-info btn-flat" data-toggle="modal" data-target="#DialogLookup" @vsDisableButton><i class="fa fa-search"></i></button>
                </span>
            </div><!-- /input-group -->

            
            @if (ViewData.ModelState["RES_NM1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_NM1")
                    </label>
            }
            @if (ViewData.ModelState["RES_NM2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_NM2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    @Html.HiddenFor(model => model.RES_DEPT_RUID, new { id = "RES_DEPT_RUID" })
    <div class="col-xs-12">
        @if (ViewData.ModelState["RES_DEPT_NM0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="RES_DEPT_NM">Departemen</label>
            <input type="text" id="RES_DEPT_NM" name="RES_DEPT_NM" value="@Html.DisplayFor(model => model.RES_DEPT_NM)" class="form-control" readonly />

            @if (ViewData.ModelState["RES_DEPT_NM1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_DEPT_NM1")
                    </label>
            }
            @if (ViewData.ModelState["RES_DEPT_NM2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_DEPT_NM2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    @Html.HiddenFor(model => model.RES_JOB_TITLE_RUID, new { id = "RES_JOB_TITLE_RUID" })
    <div class="col-xs-12">
        @if (ViewData.ModelState["RES_JOB_TITLE_NM0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="RES_JOB_TITLE_NM">Jabatan</label>
            <input type="text" id="RES_JOB_TITLE_NM" name="RES_JOB_TITLE_NM" value="@Html.DisplayFor(model => model.RES_JOB_TITLE_NM)" class="form-control" readonly />

            @if (ViewData.ModelState["RES_JOB_TITLE_NM1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_JOB_TITLE_NM1")
                    </label>
            }
            @if (ViewData.ModelState["RES_JOB_TITLE_NM2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_JOB_TITLE_NM2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<hr />

        <div class="row">
            <div class="col-xs-12">
                @if (ViewData.ModelState["RES_JOIN_DT0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
                <div class="form-group @vsErrClass">
                    <label for="RES_JOIN_DT">Tanggal Bergabung</label>
                    <input type="text" id="RES_JOIN_DT" name="RES_JOIN_DT" value="@Html.DisplayFor(model => model.RES_JOIN_DT)" class="form-control" readonly data-inputmask="@vsDateFormat" data-mask />

            
                    @if (ViewData.ModelState["RES_JOIN_DT1"] != null)
                    {
                            <label class="control-label" for="inputError">
                            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_JOIN_DT1")
                            </label>
                    }
                    @if (ViewData.ModelState["RES_JOIN_DT2"] != null)
                    {
                            <label class="control-label" for="inputError">
                            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RES_JOIN_DT2")
                            </label>
                    }
                </div> <!-- /.form-group -->
            </div> <!-- /.col-xs-12 -->
        </div><!-- /.row -->

        <div class="row">
            <div class="col-xs-12">
                @if (ViewData.ModelState["LEAVE_BAL0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
                <div class="form-group @vsErrClass">
                    <label for="LEAVE_BAL">Sisa Cuti Besar (Hari)</label>
                    <input type="text" id="LEAVE_BAL" name="LEAVE_BAL" value="@Html.DisplayFor(model => model.LEAVE_BAL)" class="form-control" readonly />

                    @if (ViewData.ModelState["LEAVE_BAL1"] != null)
                    {
                            <label class="control-label" for="inputError">
                            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("LEAVE_BAL1")
                            </label>
                    }
                    @if (ViewData.ModelState["LEAVE_BAL2"] != null)
                    {
                            <label class="control-label" for="inputError">
                            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("LEAVE_BAL2")
                            </label>
                    }
                </div> <!-- /.form-group -->
            </div> <!-- /.col-xs-12 -->
        </div><!-- /.row -->
